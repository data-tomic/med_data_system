# Generated by Django 4.2.20 on 2025-04-01 07:21

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ObservationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код показателя')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование показателя')),
                ('unit', models.CharField(blank=True, max_length=50, null=True, verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Тип показателя',
                'verbose_name_plural': 'Типы показателей',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(verbose_name='Дата рождения')),
                ('primary_diagnosis_mkb', models.CharField(blank=True, max_length=20, null=True, verbose_name='Основной диагноз (МКБ)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления записи')),
            ],
            options={
                'verbose_name': 'Пациент',
                'verbose_name_plural': 'Пациенты',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='HospitalizationEpisode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания записи')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='core.patient', verbose_name='Пациент')),
            ],
            options={
                'verbose_name': 'Эпизод госпитализации',
                'verbose_name_plural': 'Эпизоды госпитализации',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_numeric', models.FloatField(blank=True, null=True, verbose_name='Числовое значение')),
                ('value_text', models.TextField(blank=True, null=True, verbose_name='Текстовое значение')),
                ('observation_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время наблюдения')),
                ('episode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='observations', to='core.hospitalizationepisode', verbose_name='Эпизод')),
                ('observation_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.observationtype', verbose_name='Тип показателя')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='core.patient', verbose_name='Пациент')),
            ],
            options={
                'verbose_name': 'Наблюдение',
                'verbose_name_plural': 'Наблюдения',
                'ordering': ['-observation_time'],
                'indexes': [models.Index(fields=['patient', 'observation_type', '-observation_time'], name='core_observ_patient_27e925_idx')],
            },
        ),
    ]
